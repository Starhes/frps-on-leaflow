# .github/workflows/build.yml
name: Build and Push frps to GHCR

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/frps

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Resolve latest frp version (follow redirect)
        id: latest
        run: |
          set -e
          URL=$(curl -fsSLI -o /dev/null -w '%{url_effective}' https://github.com/fatedier/frp/releases/latest)
          # URL 形如 .../tag/v0.65.0
          TAG="${URL##*/}"                  # v0.65.0
          VER="${TAG#v}"                    # 0.65.0
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          echo "ver=${VER}" >> $GITHUB_OUTPUT
          echo "Latest tag: ${TAG}, ver: ${VER}"

      - name: Download frps (linux amd64)
        run: |
          set -e
          TAG="${{ steps.latest.outputs.tag }}"
          VER="${{ steps.latest.outputs.ver }}"
          TARBALL="frp_${VER}_linux_amd64.tar.gz"
          DLURL="https://github.com/fatedier/frp/releases/download/${TAG}/${TARBALL}"
          echo "Downloading ${DLURL}"
          curl -fL --retry 5 -o "${TARBALL}" "${DLURL}"
          tar -xzf "${TARBALL}"
          # 解包目录名如 frp_0.65.0_linux_amd64
          SRC_DIR="frp_${VER}_linux_amd64"
          test -x "${SRC_DIR}/frps"
          cp "${SRC_DIR}/frps" ./frps
          chmod +x ./frps
          echo "${TAG}" > .frp_tag

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ steps.latest.outputs.tag }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Summary
        run: |
          echo "Pushed: ${{ env.IMAGE_NAME }}:${{ steps.latest.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
          echo "Pushed: ${{ env.IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
